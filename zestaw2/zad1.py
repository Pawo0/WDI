from functools import wraps
from time import time

def timing(f):
    @wraps(f)
    def wrap(*args, **kwargs):
        t_start = time()
        result = f(*args, **kwargs)
        t_stop = time()
        print(f"Func {f.__name__} took: {t_stop-t_start} ")
        return result
    return wrap



def fib(ile=100):
    x, y = 1, 1
    tab = []
    while y <= ile:
        x, y = y, x + y
        tab.append(x)
    return tab

@timing
def zad1(liczba):
    tab = fib(liczba)
    for i in tab:
        for j in tab:
            if i*j == liczba:
                return (i,j)
    return False

@timing
def zad1_a(liczba):
    tab = fib(liczba)
    i = 0
    while i < len(tab):
        j = 0
        while j < i:
            if tab[j] * tab[i] == liczba:
                return (tab[i],tab[j])
            j += 1
        i += 1
    return False




if __name__ == "__main__":
    result = zad1_a(8003379607696028244860352600741353755192238127642828311132210776627051114148521636298101614945975948834350633938964520147174670581157778959915144658204123519836465337328726224270588605309506012909776561084801488621030618842804419214902584871515359487450395631789000439003721161619117211948451195424289969317864634009645377281368521616243711018024885597482879049841006774973591601915656126753888115673857164446784348376)
    result_a = zad1(8003379607696028244860352600741353755192238127642828311132210776627051114148521636298101614945975948834350633938964520147174670581157778959915144658204123519836465337328726224270588605309506012909776561084801488621030618842804419214902584871515359487450395631789000439003721161619117211948451195424289969317864634009645377281368521616243711018024885597482879049841006774973591601915656126753888115673857164446784348376)


